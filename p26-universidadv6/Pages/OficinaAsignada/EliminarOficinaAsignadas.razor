@page "/EliminarOficinaAsignadas/{Id:int}"
@inject NavigationManager NavigationManager
@using p21_universidadv1.Modelo;
@using p21_universidadv1.Servicio;
@inject ServicioOficinaAsignadas serv;
@inject ServicioInstructores sins;

<h3>Eliminar Oficina Asignada</h3> 
<hr>
<h3>Estas seguro que desas Eliminar? </h3>

 <div class="row">
    <div class="col-md-8">
    <EditForm Model="@obj">
            <fieldset disabled=true>
            <div class="form-group">
                <label for="InstructorId" class="control-label">Instructor </label>
                <InputSelect id="InstructorId" class="form-control" @bind-Value="obj.InstructorId">
                    <option value="@(0)" disabled >-Elije un Instructor-</option> 
                    @foreach (var i in @objins )
                    {
                        <option value="@i.Id">@i.NombreCompleto</option>
                    }
                </InputSelect>
            </div>
            
               <div class="form-group">
                <label for="Ubicacion" class="control-label">Ubicacion</label>
                <InputText id="Ubicacion" class="form-control" @bind-Value="obj.Ubicacion"/>
            </div>
            </fieldset>
            <button type="submit" class="btn btn-danger" @onclick="@EliminarOficinaAsignada">Eliminar</button>
            <button type="button" class="btn btn-primary" @onclick="@Cancelar" >Cancelar</button>
    </EditForm> 
    </div>
 </div>
 
@code {
    [Parameter] public int Id {get; set;}
    OficinaAsignada obj = new OficinaAsignada();
    List<Instructor> objins;
    protected void EliminarOficinaAsignada() {
        serv.Eliminar(obj);
        NavigationManager.NavigateTo("OficinaAsignadas");
    }
    protected void Cancelar() {
       NavigationManager.NavigateTo("OficinaAsignadas");
    }
    protected override void OnInitialized() {
         objins = sins.ObtenerTodo("");
         obj = serv.Obtener(Id);
    }
}